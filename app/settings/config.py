import os

# APP
TITLE = "Dataflow"
PREFIX = f"/api/{TITLE.replace(' ', '_').lower()}"

# KEYCLOAK
KEYCLOAK_PROTOCOL = os.environ.get("KEYCLOAK_PROTOCOL", "http")
KEYCLOAK_HOST = os.environ.get("KEYCLOAK_HOST", "keycloak")
KEYCLOAK_PORT = os.environ.get("KEYCLOAK_PORT", "8080")
KEYCLOAK_REALM = os.environ.get("KEYCLOAK_REALM", "avataa")
# KEYCLOAK_CLIENT_ID = os.environ.get("KEYCLOAK_CLIENT_ID")
# KEYCLOAK_CLIENT_SECRET = os.environ.get("KEYCLOAK_CLIENT_SECRET", None)

KEYCLOAK_REDIRECT_PROTOCOL = os.environ.get("KEYCLOAK_REDIRECT_PROTOCOL", None)
KEYCLOAK_REDIRECT_HOST = os.environ.get("KEYCLOAK_REDIRECT_HOST", None)
KEYCLOAK_REDIRECT_PORT = os.environ.get("KEYCLOAK_REDIRECT_PORT", None)

if KEYCLOAK_REDIRECT_PROTOCOL is None:
    KEYCLOAK_REDIRECT_PROTOCOL = KEYCLOAK_PROTOCOL
if KEYCLOAK_REDIRECT_HOST is None:
    KEYCLOAK_REDIRECT_HOST = KEYCLOAK_HOST
if KEYCLOAK_REDIRECT_PORT is None:
    KEYCLOAK_REDIRECT_PORT = KEYCLOAK_PORT

KEYCLOAK_URL = f"{KEYCLOAK_PROTOCOL}://{KEYCLOAK_HOST}"
if KEYCLOAK_PORT:
    KEYCLOAK_URL += f":{KEYCLOAK_PORT}"
KEYCLOAK_PUBLIC_KEY_URL = f"{KEYCLOAK_URL}/realms/{KEYCLOAK_REALM}"
KEYCLOAK_REDIRECT_URL = (
    f"{KEYCLOAK_REDIRECT_PROTOCOL}://{KEYCLOAK_REDIRECT_HOST}"
)
if KEYCLOAK_REDIRECT_PORT:
    KEYCLOAK_REDIRECT_URL += f":{KEYCLOAK_REDIRECT_PORT}"
KEYCLOAK_TOKEN_URL = f"{KEYCLOAK_REDIRECT_URL}/realms/{KEYCLOAK_REALM}/protocol/openid-connect/token"
KEYCLOAK_AUTHORIZATION_URL = f"{KEYCLOAK_REDIRECT_URL}/realms/{KEYCLOAK_REALM}/protocol/openid-connect/auth"

SECURITY_TYPE = os.environ.get("SECURITY_TYPE", "KEYCLOAK-INFO").upper()
ADMIN_ROLE = "__admin"

# CACHE
SECURITY_MIDDLEWARE_PROTOCOL = os.environ.get(
    "SECURITY_MIDDLEWARE_PROTOCOL", KEYCLOAK_PROTOCOL
)
SECURITY_MIDDLEWARE_HOST = os.environ.get(
    "SECURITY_MIDDLEWARE_HOST", KEYCLOAK_HOST
)
SECURITY_MIDDLEWARE_PORT = os.environ.get(
    "SECURITY_MIDDLEWARE_PORT", KEYCLOAK_PORT
)
if (
    SECURITY_MIDDLEWARE_HOST == KEYCLOAK_HOST
    and SECURITY_MIDDLEWARE_PORT == KEYCLOAK_PORT
):
    SECURITY_POSTFIX = (
        f"/realms/{KEYCLOAK_REALM}/protocol/openid-connect/userinfo"
    )
else:
    SECURITY_POSTFIX = f"/api/security_middleware/v1/cached/realms/{KEYCLOAK_REALM}/protocol/openid-connect/userinfo"
SECURITY_MIDDLEWARE_URL = f"{SECURITY_MIDDLEWARE_PROTOCOL}://{SECURITY_MIDDLEWARE_HOST}:{SECURITY_MIDDLEWARE_PORT}{SECURITY_POSTFIX}"


DEBUG = os.environ.get("DEBUG", "False").upper() in ("TRUE", "Y", "YES", "1")

# DOCUMENTATION
DOCS_ENABLED = os.environ.get("DOCS_ENABLED", "True").upper() in (
    "TRUE",
    "Y",
    "YES",
    "1",
)
DOCS_CUSTOM_ENABLED = os.environ.get(
    "DOCS_CUSTOM_ENABLED", "False"
).upper() in (
    "TRUE",
    "Y",
    "YES",
    "1",
)
SWAGGER_JS_URL = os.environ.get("DOCS_SWAGGER_JS_URL", None)
SWAGGER_CSS_URL = os.environ.get("DOCS_SWAGGER_CSS_URL", None)
REDOC_JS_URL = os.environ.get("DOCS_REDOC_JS_URL", None)
