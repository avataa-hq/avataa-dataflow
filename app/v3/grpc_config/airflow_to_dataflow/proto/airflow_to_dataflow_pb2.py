# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: airflow_to_dataflow.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x61irflow_to_dataflow.proto\x12\x13\x61irflow_to_dataflow\"2\n\x1dRequestGetSourceConfiguration\x12\x11\n\tsource_id\x18\x01 \x01(\x05\"5\n\x1eResponseGetSourceConfiguration\x12\x13\n\x0bsource_data\x18\x01 \x01(\t\"3\n\x19RequestGetDestinationData\x12\x16\n\x0e\x64\x65stination_id\x18\x01 \x01(\x05\"6\n\x1aResponseGetDestinationData\x12\x18\n\x10\x64\x65stination_data\x18\x01 \x01(\t2\x92\x02\n\x11\x41irflowToDataflow\x12\x83\x01\n\x16GetSourceConfiguration\x12\x32.airflow_to_dataflow.RequestGetSourceConfiguration\x1a\x33.airflow_to_dataflow.ResponseGetSourceConfiguration\"\x00\x12w\n\x12GetDestinationData\x12..airflow_to_dataflow.RequestGetDestinationData\x1a/.airflow_to_dataflow.ResponseGetDestinationData\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'airflow_to_dataflow_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REQUESTGETSOURCECONFIGURATION._serialized_start=50
  _REQUESTGETSOURCECONFIGURATION._serialized_end=100
  _RESPONSEGETSOURCECONFIGURATION._serialized_start=102
  _RESPONSEGETSOURCECONFIGURATION._serialized_end=155
  _REQUESTGETDESTINATIONDATA._serialized_start=157
  _REQUESTGETDESTINATIONDATA._serialized_end=208
  _RESPONSEGETDESTINATIONDATA._serialized_start=210
  _RESPONSEGETDESTINATIONDATA._serialized_end=264
  _AIRFLOWTODATAFLOW._serialized_start=267
  _AIRFLOWTODATAFLOW._serialized_end=541
# @@protoc_insertion_point(module_scope)
