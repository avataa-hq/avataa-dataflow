syntax = "proto3";
package source_data;


service DataCarrier {
    // creation rpc
    rpc CreateSourceGroup (GroupRequest) returns (Response) {}
    rpc CreateSource (SourceRequest) returns (Response) {}
    rpc ConfigSource (ConfigRequest) returns (Response) {}
    rpc ConfigSourceWithTypes (ConfigWithTypesRequest) returns (Response) {}
    rpc InsertData (stream DataRequest) returns (Response) {}

    // deletion rpc
    rpc DeleteGroup (GroupDeleteRequest) returns (Response) {}
    rpc DeleteSource (SourceDeleteRequest) returns (Response) {}

    // service
    rpc IsDestinationUsed (RequestIsDestinationUsed) returns (ResponseIsDestinationUsed) {}
}

message GroupRequest {
    int32 group_id = 1;
    string name = 2;
}

message GroupDeleteRequest {
    int32 group_id = 1;
}

message Response {
    string status = 1;
    optional string message = 2;
}

message SourceRequest {
    int32 source_id = 1;
    int32 group_id = 2;
    string name = 3;
}

message SourceDeleteRequest {
    int32 source_id = 1;
}

message ConfigRequest {
    int32 source_id = 1;
    repeated string columns = 2;
}

message ConfigWithTypesRequest {
    int32 source_id = 1;
    map<string, string> columns = 2;
}

message DataRequest {
    int32 source_id = 1;
    int32 count = 2;
    map<string, string> data_row = 3;
}

message RequestIsDestinationUsed {
    int32 destination_id = 1;
}

message ResponseIsDestinationUsed {
    bool is_used = 1;
}
